{erl_opts, [
  debug_info,
  {i, "./_build/default/plugins/gpb/include"}
]}.

%% 包含当前“.”目录，为了把protobuf.erl和protobuf.app.src放到外面来
{erl_first_files, ["protobuf.app.src", "protobuf.erl"]}.

{deps, []}.

{gpb_opts, [
  {i, "proto"},                % path/to/proto_dir
  {module_name_suffix, "_pb"}, % Naming convention, unless you have a good reason just go with it.
  %{o, "path/to/out_dir"},     % both .erl and .hrl are generated here, we will define the directories below instead.
  {o_erl, "src"},              % Where the generated source is placed
  {o_hrl, "include"},          % Where the generated include files are placed
  {strings_as_binaries, true},
  type_specs]}.

%% -*- erlang -*-
{pre_hooks,
  [
    {compile, "mkdir -p include"}, %% ensure the include dir exists
    {compile, "mkdir -p priv"} %% ensure the include dir exists
  ]}.

{post_hooks, [
  {clean,
    "bash -c 'for f in proto/*.proto; "
    "do "
    "  rm -f src/$(basename $f .proto).erl; "
    "  rm -f include/$(basename $f .proto).hrl; "
    "done'"}
]}.

{provider_hooks, [
  {pre, [
    {compile, {protobuf, compile}},
    {clean, {protobuf, clean}}
  ]}
]}.

