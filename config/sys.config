[
  {rich, []},
  {sasl, [
    %% 关闭默认输出
    {sasl_error_logger, false},
    {errlog_type, error}
    %% define the parameters of the rotating log
    %% the log file directory
    %%    {error_logger_mf_dir, "../log"},
    %% # bytes per logfile
    %%    {error_logger_mf_maxbytes, 10485760}, % 10 MB
    %% maximum number of logfiles
    %%    {error_logger_mf_maxfiles, 10}
  ]},

  {lager, [
    %% log路径
    {log_root, "./log"},

    %% 定义信息的颜色
    {colored, true},
    {colors, [
      {debug, "\e[0;32m"}, % 绿色
      {info, "\e[0;37m"}, % 白色
      {notice, "\e[0;36m"}, % 蓝色
      {warning, "\e[1;33m"}, % 高亮-黄色
      {error, "\e[1;31m"}, % 高亮-红色
      {critical, "\e[1;35m"}, % 高亮-紫色
      {alert, "\e[1;44m"}, % 高亮-背景蓝色
      {emergency, "\e[1;41m"} % 高亮-背景深红
    ]},

    %% Whether to write a crash log, and where. Undefined means no crash logger.
    {crash_log, "crash.log"},
    %% Maximum size in bytes of events in the crash log - defaults to 65536
    {crash_log_msg_size, 65536},
    %% Maximum size of the crash log in bytes, before its rotated, set
    %% to 0 to disable rotation - default is 0
    {crash_log_size, 10485760},
    %% What time to rotate the crash log - default is no time
    %% rotation. See the README for a description of this format.
    {crash_log_date, "$D0"},
    %% Number of rotated crash logs to keep, 0 means keep only the
    %% current one - default is 0
    {crash_log_count, 7},

    %% Whether to redirect error_logger messages into the default lager_event sink - defaults to true
    {error_logger_redirect, true},
    %% 高水位，也就是每秒可以接受多少条log信息，超过的话就丢掉
    {error_logger_hwm, 512},
    %% How big the gen_event mailbox can get before it is
    %% switched into sync mode.  This value only applies to
    %% the default sink; extra sinks can supply their own.
    {async_threshold, 20},
    %% Switch back to async mode, when gen_event mailbox size
    %% decrease from `async_threshold' to async_threshold -
    %% async_threshold_window. This value only applies to the
    %% default sink; extra sinks can supply their own.
    {async_threshold_window, 5},


    {handlers, [
      {lager_console_backend, [{level, debug}]},
      {lager_file_backend, [{file, "error.log"}, {level, error}]},
      {lager_file_backend, [{file, "info.log"}, {level, info}]}
    ]}

    %%    {extra_sinks,
    %%      [{error_logger_lager_event,
    %%        [{handlers, [
    %%          {lager_file_backend, [{file, "error_logger.log"}, {level, info}]}
    %%        ]}]
    %%      }]
    %%    }

  ]}
].
